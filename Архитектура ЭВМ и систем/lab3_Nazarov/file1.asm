 .global _c_int00     ;точка входа
_c_int00:
 .data   ;секция данных

idstart	.uint 1	;индекс массива, от которого насчитается суммирование
idend .uint 5	;индекс массива, до которого идет суммирование
array1:  .uint 1,2,3,4,5,6,7,8    ;создаем массив 32 разрядных чисел

 .text   ;секция кода
 MVK .S1 idstart,A1 ;Загрузить адрес регистра idstart в A1
 MVK .S1 idend,A2	;Загрузить адрес регистра idend в A2

 LDW .D1 *A1,A1	;Выгрузить значение регистра idstart в A1
 LDW .D1 *A2,A2 	;Выгрузить значение регистра idend в A2

 MVK .S1 array1,A3    ;загружаем адрес массива1 в A3
 MVKH .S1 array1,A3
 NOP 2	;2х тактовая задержка загрузки

 MVK .S1 0,A4     ;сумма элементов
 MVK .S1 0,A5     ;тек. элемент выбираемый из массива 1

LOOP:
    SUB .L1 A2,1,A2       ;A2 := A2 - 1
    SUB .L1 A2, A1,A0	 ;разница между индексом текущего элемента и индексом начального элемента в A0
    [A0] B .S1 LOOP      ;переход если A0 <> 0
    || LDW   .D1  *A3[A2], A5  ;загружаем текущий элемент в A5
    NOP 4
    ADD .L1 A4, A5,A4    ;сумма результатов умножения в A4
